!function e(t,n,i){function o(a,c){if(!n[a]){if(!t[a]){var s="function"==typeof require&&require;if(!c&&s)return s(a,!0);if(r)return r(a,!0);throw new Error("Cannot find module '"+a+"'")}var u=n[a]={exports:{}};t[a][0].call(u.exports,function(e){var n=t[a][1][e];return o(n?n:e)},u,u.exports,e,t,n,i)}return n[a].exports}for(var r="function"==typeof require&&require,a=0;a<i.length;a++)o(i[a]);return o}({1:[function(e,t,n){"use strict";Object.defineProperty(n,"__esModule",{value:!0});var i=0;n.D_EAST=i;var o=1;n.D_SOUTH=o;var r=2;n.D_WEST=r;var a=3;n.D_NORTH=a;var c=4;n.D_OTHER=c;var s=2;n.D_OP_MASK=s;var u=0;n.BT_EMPTY=u;var f=1;n.BT_SNAKE=f;var d={EAST:0,SOUTH:1,WEST:2,NORTH:3,OTHER:4,OTHER_T:6,OP_MASK:2};n.D=d;var h={EMPTY:0,SNAKE:1,food:2};n.B=h},{}],2:[function(e,t,n){"use strict";function i(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n in e)Object.prototype.hasOwnProperty.call(e,n)&&(t[n]=e[n]);return t["default"]=e,t}function o(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function r(e){console.log(e);for(var t=0;null!=e[t];)t++;return t}Object.defineProperty(n,"__esModule",{value:!0});var a=function(){function e(e,t){for(var n=0;n<t.length;n++){var i=t[n];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(e,i.key,i)}}return function(t,n,i){return n&&e(t.prototype,n),i&&e(t,i),t}}(),c=e("./consts.js"),s=i(c),u=function(){function e(t){if(o(this,e),1!=t.version)throw"wrong version";this.json=t;var n=this.json.snakes.filter(function(e){return null!=e}).length;this.cache={nsnake:n}}return a(e,[{key:"handleCommands",value:function(e){var t=this;e.forEach(function(e){try{f[e[0]](e[1],t)}catch(n){console.error(n)}})}},{key:"getBox",value:function(e){var t=e.x,n=e.y;return this.json.grid[n*this.json.width+t]}},{key:"getSnakeSize",value:function(){return this.cache.nsnake}},{key:"setSnake",value:function(e){null!=this.json.snakes[e.index]&&this.cache.nsnake--,null!=e&&this.cache.nsnake++,this.json.snakes[e.index]=e}}]),e}();n["default"]=u;var f={move:function(e,t){var n=t.json,i=n.snakes[e.s],o=(i.head,t.getBox(i.head));if(o[1].h!=D_OTHER){var r=applyDirection(i.head,head.d.h),a=t.getBox(r);switch(a.t){case BT_FOOD:i.remain+=a.d.q,a.t=BT_EMPTY,a.d={};case BT_EMPTY:a.t=BT_SNAKE,a.d={d:i.d,s:i.index},i.remain>0&&i.remain--;break;case BT_BLOCK:case BT_SNAKE:for(a=t.getBox(sanke);a.t==BT_SNAKE&&a.d.s==i.index;){var c=applyDirection({x:s,y:u},a.d.d^D_OP_MASK),s=c.x,u=c.y,f=t.getBox({x:s,y:u});a.t=BT_EMPTY,a.d={},a=f}}}},join:function(e,t){var n=e.x,i=e.y,o=t.getBox({x:n,y:i});if(o[0]!=s.BT_EMPTY)throw"box taken";var a=r(t.json.snakes),c={age:0,index:a,head:{x:n,y:i},length:1,name:e.name,remain:e.remain,tail:{x:n,y:i}};t.setSnake(c),t.json.snakes[c.index]=c,o[0]=s.BT_SNAKE,o[1]={h:s.D_OTHER,s:c.index,t:s.D_OTHER_T}}};t.exports=n["default"]},{"./consts.js":1}],3:[function(e,t,n){"use strict";function i(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n in e)Object.prototype.hasOwnProperty.call(e,n)&&(t[n]=e[n]);return t["default"]=e,t}Object.defineProperty(n,"__esModule",{value:!0});var o=e("./consts.js"),r=i(o);n["default"]=function(e){for(var t=e.width*e.height,n=[],i=0;t>i;i++)n[i]=[r.BT_EMPTY,{}];var o={version:1,width:e.width,height:e.height,grid:n,snakes:[]};return{game:o}},t.exports=n["default"]},{"./consts.js":1}],4:[function(e,t,n){"use strict";function i(e){return e&&e.__esModule?e:{"default":e}}function o(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n in e)Object.prototype.hasOwnProperty.call(e,n)&&(t[n]=e[n]);return t["default"]=e,t}function r(e,t){var n=t.head,i=e.getBox(n);if(i[1].h==c.D_OTHER)return expect(t.length).to.be(1),expect(i[1].t==c.D_OTHER),void expect(t.tail).to.eql(n);for(var o=applyDirection(n,i[1].t),r=e.getBox(n),a=1;r[0]==c.BT_SNAKE&&r[1].s==t.index;){if(i==r){expect(i[1].t).to.be(c.D_OTHER_T);break}expect(r[1].h==i[1].t),n=o,i=r,o=applyDirection(n,i[1].t),r=e.getBox(o)}expect(t.length).to.be(a),expect(t.tail).to.eql(n)}var a=e("../consts.js"),c=o(a),s=e("../map.js"),u=i(s),f=e("../game.js"),d=i(f);describe("Sample test",function(){describe("basics",function(){it("is working",function(){expect(!0).to.equal(!0)}),it("can import",function(){expect(c.D_EAST).to.be(0)})}),describe("hooks",function(){var e=0;before(function(){e+=1}),it("run before block",function(){expect(e).to.be(1)}),it("run before block twice",function(){expect(e).to.be(1)})})}),describe("map",function(){var e;beforeEach(function(){e={version:1,width:10,height:10}}),describe.skip("validation",function(){it("passes when input is good",function(){expect(u["default"]).withArgs(e).not.to.throwException()}),it("varifies version",function(){e.version=-1,expect(u["default"]).withArgs(e).to.throwException()}),it.skip("varifies size",function(){e.width=0,expect(u["default"]).withArgs(e).to.throwException(),e.width=-1,expect(u["default"]).withArgs(e).to.throwException(),e.width=3.5,expect(u["default"]).withArgs(e).to.throwException(),e.width=1e10,expect(u["default"]).withArgs(e).to.throwException(),e.width=10,e.height=0,expect(u["default"]).withArgs(e).to.throwException(),e.height=-1,expect(u["default"]).withArgs(e).to.throwException(),e.height=3.5,expect(u["default"]).withArgs(e).to.throwException(),e.height=1e10,expect(u["default"]).withArgs(e).to.throwException()})}),describe("game",function(){})}),describe("Game",function(){var e,t={j222:["join",{name:"j22",remain:2,x:2,y:2}],j242:["join",{name:"j24",remain:2,x:2,y:4}],d00:["direction",{s:0,d:0}],m0:["move",{s:0}]};beforeEach(function(){var t={width:20,height:20,version:1};e=new d["default"](u["default"](t).game)}),describe("#handleCommands",function(){describe("join",function(){it("can join many snakes",function(){var n=e.getBox({x:2,y:2}),i=e.getBox({x:2,y:4});e.handleCommands([t.j222]),expect(e.getSnakeSize()).to.be(1),expect(n[0]===c.BT_SNAKE),e.handleCommands([t.j242]),expect(e.getSnakeSize()).to.be(2),expect(i[0]===c.BT_SNAKE)}),it("cannot add snake at the same position",function(){e.handleCommands([t.j22]),e.handleCommands([t.j22]),expect(e.getSnakeSize()).to.be(1)})}),describe("direction",function(){it("can change direction",function(){e.handleCommands([t.j222,t.d00])})}),describe.skip("move",function(){it("moves along direction",function(){e.handleCommands([t.j222,t.d00,t.m0]);var n=e.snake[0];r(e,n),r(e,n)})})})})},{"../consts.js":1,"../game.js":2,"../map.js":3}]},{},[4]);
//# sourceMappingURL=main.min.js.map